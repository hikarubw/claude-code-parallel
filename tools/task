#!/bin/bash
# Unified task management - queue, approval, and blocking
# Supports task format: #47-1 (issue 47, task 1)

TASK_DIR=".claude/tasks"
QUEUE_FILE="$TASK_DIR/queue"
APPROVED_FILE="$TASK_DIR/approved.log"
REJECTED_FILE="$TASK_DIR/rejected.log"
BLOCKING_FILE="$TASK_DIR/blocking"
mkdir -p "$TASK_DIR"

case "$1" in
    add)
        # Add task to queue
        task="$2"
        priority="${3:-5}"
        echo "$task|$priority|$(date +%s)" >> "$QUEUE_FILE"
        echo "Added $task to queue (priority: $priority)"
        ;;
    
    next)
        # Get next available task (not blocked)
        while IFS='|' read -r task priority timestamp; do
            # Check if blocked
            blocked_by=$(grep "|$task|" "$BLOCKING_FILE" 2>/dev/null | cut -d'|' -f1)
            if [ -z "$blocked_by" ]; then
                echo "$task|$priority|$timestamp"
                # Remove from queue
                grep -v "^$task|" "$QUEUE_FILE" > "$QUEUE_FILE.tmp" && mv "$QUEUE_FILE.tmp" "$QUEUE_FILE"
                exit 0
            fi
        done < "$QUEUE_FILE"
        echo "No unblocked tasks available"
        exit 1
        ;;
    
    approve)
        # Approve task
        task="$2"
        reason="${3:-Approved by Claude}"
        echo "$(date +%s)|$task|$reason|claude" >> "$APPROVED_FILE"
        echo "✅ Approved: $task - $reason"
        ;;
    
    reject)
        # Reject task
        task="$2"
        reason="${3:-Needs manual review}"
        echo "$(date +%s)|$task|$reason|claude" >> "$REJECTED_FILE"
        echo "❌ Rejected: $task - $reason"
        ;;
    
    block)
        # Add blocking relationship
        blocker="$2"
        blocked="$3"
        echo "$blocker|$blocked|$(date +%s)" >> "$BLOCKING_FILE"
        echo "$blocker blocks $blocked"
        ;;
    
    unblock)
        # Remove blocking relationship
        blocker="$2"
        blocked="$3"
        grep -v "^$blocker|$blocked|" "$BLOCKING_FILE" > "$BLOCKING_FILE.tmp" 2>/dev/null || true
        mv "$BLOCKING_FILE.tmp" "$BLOCKING_FILE" 2>/dev/null || true
        echo "Removed: $blocker no longer blocks $blocked"
        ;;
    
    status)
        # Check task status
        task="${2:-all}"
        
        if [ "$task" = "all" ]; then
            echo "=== Task Status ==="
            echo "Queued: $(wc -l < "$QUEUE_FILE" 2>/dev/null | tr -d ' ' || echo 0)"
            echo "Approved: $(wc -l < "$APPROVED_FILE" 2>/dev/null | tr -d ' ' || echo 0)"
            echo "Rejected: $(wc -l < "$REJECTED_FILE" 2>/dev/null | tr -d ' ' || echo 0)"
            
            # Show blocking summary
            blocking_count=$(wc -l < "$BLOCKING_FILE" 2>/dev/null | tr -d ' ' || echo 0)
            if [ "$blocking_count" -gt 0 ]; then
                echo ""
                echo "Blocking relationships: $blocking_count"
            fi
        else
            # Check specific task
            if grep -q "^$task|" "$QUEUE_FILE" 2>/dev/null; then
                echo "Status: Queued"
            elif grep -q "|$task|" "$APPROVED_FILE" 2>/dev/null; then
                echo "Status: Approved"
            elif grep -q "|$task|" "$REJECTED_FILE" 2>/dev/null; then
                echo "Status: Rejected"
            else
                echo "Status: Unknown"
            fi
            
            # Check if blocked
            blocked_by=$(grep "|$task|" "$BLOCKING_FILE" 2>/dev/null | cut -d'|' -f1)
            if [ -n "$blocked_by" ]; then
                echo "Blocked by: $blocked_by"
            fi
        fi
        ;;
    
    list)
        # List tasks with optional filter
        filter="$2"
        
        case "$filter" in
            --blocked)
                echo "=== Blocked Tasks ==="
                grep -f <(cut -d'|' -f2 "$BLOCKING_FILE" 2>/dev/null) "$QUEUE_FILE" 2>/dev/null | \
                while IFS='|' read -r task priority timestamp; do
                    blocked_by=$(grep "|$task|" "$BLOCKING_FILE" | cut -d'|' -f1)
                    echo "  $task (blocked by: $blocked_by)"
                done || echo "No blocked tasks"
                ;;
            
            --approved)
                echo "=== Recently Approved ==="
                tail -10 "$APPROVED_FILE" 2>/dev/null | while IFS='|' read -r ts task reason by; do
                    echo "  $task - $reason"
                done || echo "No approvals"
                ;;
            
            --manual-blocking)
                echo "=== Manual Tasks Blocking Automation ==="
                # Look for manual tasks (those with 👤 prefix in task IDs)
                grep -E "👤.*\|" "$BLOCKING_FILE" 2>/dev/null | \
                while IFS='|' read -r manual blocked timestamp; do
                    echo ""
                    echo "🚨 $manual blocks:"
                    echo "   → $blocked"
                done || echo "No manual tasks blocking work"
                ;;
            
            *)
                # Default: show queue
                echo "=== Task Queue ==="
                if [ -s "$QUEUE_FILE" ]; then
                    echo "Task|Priority|Added"
                    echo "-----|---------|-----"
                    while IFS='|' read -r task priority timestamp; do
                        date_str=$(date -d "@$timestamp" "+%Y-%m-%d %H:%M" 2>/dev/null || date -r "$timestamp" "+%Y-%m-%d %H:%M" 2>/dev/null)
                        echo "$task|$priority|$date_str"
                    done < "$QUEUE_FILE"
                else
                    echo "Queue is empty"
                fi
                ;;
        esac
        ;;
    
    clear)
        # Clear specific data
        what="$2"
        case "$what" in
            queue)
                > "$QUEUE_FILE"
                echo "Cleared queue"
                ;;
            approvals)
                > "$APPROVED_FILE"
                > "$REJECTED_FILE"
                echo "Cleared approval history"
                ;;
            blocking)
                > "$BLOCKING_FILE"
                echo "Cleared blocking relationships"
                ;;
            all)
                > "$QUEUE_FILE"
                > "$APPROVED_FILE"
                > "$REJECTED_FILE"
                > "$BLOCKING_FILE"
                echo "Cleared all task data"
                ;;
            *)
                echo "Usage: task clear <queue|approvals|blocking|all>"
                ;;
        esac
        ;;
    
    *)
        echo "Usage: task <command> [args]"
        echo ""
        echo "Commands:"
        echo "  add TASK [PRIORITY]       - Add task to queue (e.g., #47-1)"
        echo "  next                      - Get next unblocked task"
        echo "  approve TASK [REASON]     - Mark task approved"
        echo "  reject TASK [REASON]      - Mark task rejected"
        echo "  block BLOCKER BLOCKED     - Add blocking relationship"
        echo "  unblock BLOCKER BLOCKED   - Remove blocking relationship"
        echo "  status [TASK]             - Check task status"
        echo "  list [--filter]           - List tasks"
        echo "    --blocked               - Show blocked tasks"
        echo "    --approved              - Show recent approvals"
        echo "    --manual-blocking       - Show manual tasks blocking work"
        echo "  clear <what>              - Clear data"
        echo ""
        echo "Task format: #ISSUE-TASK (e.g., #47-1 for issue 47, task 1)"
        ;;
esac